<UserControl x:Class="TaskManager.Views.DetailsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:v="clr-namespace:TaskManager.Views"
             xmlns:vm="clr-namespace:TaskManager.ViewModels"
             xmlns:cc="clr-namespace:TaskManager.CustomControls"
             xmlns:c="clr-namespace:TaskManager.Converters"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="700"
             d:DataContext="{d:DesignInstance Type=vm:DetailsViewModel, IsDesignTimeCreatable=False}">
    <UserControl.Resources>
        <c:MemoryFormatter x:Key="MemoryFormatter"/>
        
        <ControlTemplate TargetType="cc:CustomButton" x:Key="CustomButtonTemplate">
            <Border CornerRadius="2.8" Margin="7" Background="{TemplateBinding Background}">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4 0 7 0">
                    <Label FontSize="12"
                           Foreground="{TemplateBinding Foreground}"
                           Content="{TemplateBinding Icon}" />
                    <Label Margin="-4 0 0 0" FontSize="12" Foreground="{TemplateBinding Foreground}" Content="{TemplateBinding Content}" />
                </StackPanel>
            </Border>
        </ControlTemplate>
        
        <Style TargetType="cc:CustomButton">
            <Style.Setters>
                <Setter Property="Template" Value="{StaticResource CustomButtonTemplate}"/>
                <Setter Property="Background" Value="{DynamicResource Secondary}"/>
                <Setter Property="Foreground" Value="{DynamicResource PrimaryFont}"/>
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource Complementary}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PressedColor}"/>
                    <Setter Property="Foreground" Value="{DynamicResource PressedFontColor}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource DisableFontColor}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="{DynamicResource Secondary}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Border x:Name="HeaderBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource HeaderBorderColor}"
                                BorderThickness="0 0 0.8 0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
    
                                <Label Grid.Row="0"
                                       Margin="-10 -10 0 0"
                                       Foreground="{DynamicResource ArrowColor}"
                                       x:Name="SortIcon"
                                       HorizontalAlignment="Center" />
    
                                <Label Grid.Row="1"
                                       Margin="0 -18 0 -1"
                                       Foreground="{DynamicResource PrimaryFont}"
                                       Content="{TemplateBinding Content}"
                                       VerticalAlignment="Center" />
                            </Grid>
                        </Border>
    
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource HeaderHoverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource HeaderPressedColor}"/>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="SortIcon" Property="Content" Value="{md:PackIcon Kind=ChevronUp}"/>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="SortIcon" Property="Content" Value="{md:PackIcon Kind=ChevronDown}"/>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="{x:Null}">
                                <Setter TargetName="SortIcon" Property="Content" Value=""/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="DataGridCell">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border x:Name="CellBorder"
                                VerticalAlignment="Center"
                                BorderBrush="{DynamicResource CellBorderColor}"
                                BorderThickness="0 0 0.5 0">
                            <ContentPresenter Margin="2.5 0 2.5 5"
                                              VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="ImageCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridCell">
                        <Border x:Name="CellBorder"
                                VerticalAlignment="Center"
                                BorderBrush="{DynamicResource CellBorderColor}"
                                BorderThickness="0 0 0.5 0">
                            <StackPanel Orientation="Horizontal"
                                        VerticalAlignment="Center">
                                <Image Source="{Binding Icon}"
                                       Width="16"
                                       Height="16"
                                       Margin="2.5 0 2.5 0" />
                                <ContentPresenter Margin="0 0 2.5 0"
                                                  VerticalAlignment="Center" />
                            </StackPanel>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    
        <Style TargetType="DataGridRow">
            <Setter Property="Background" Value="{DynamicResource Secondary}" />
            <Setter Property="Foreground" Value="{DynamicResource PrimaryFont}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource HoverRowColor}" />
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource SelectedRowColor}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource SelectedBorderRowColor}" />
                    <Setter Property="BorderThickness" Value="0.5" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                        <Condition Property="IsSelected" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="Black" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    
    <Grid Background="{DynamicResource Primary}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>
    
        <Border Grid.Row="0"
                Background="{DynamicResource Secondary}"
                CornerRadius="8 0 0 0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
    
                <TextBlock Grid.Column="0"
                           FontSize="14"
                           FontWeight="Medium"
                           Margin="15"
                           Foreground="{DynamicResource PrimaryFont}"
                           Text="Details" />
    
                <cc:CustomButton Grid.Column="2"
                                 Content="Run new task"
                                 Icon="{md:PackIcon Kind=TaskAdd}" />
    
                <Border Grid.Column="3" Width="0.8" Height="33" Background="{DynamicResource Complementary}" CornerRadius="1" VerticalAlignment="Center" />
    
                <cc:CustomButton Grid.Column="4"
                                 Content="End task"
                                 Icon="{md:PackIcon Kind=No}" />
            </Grid>
        </Border>
    
        <DataGrid Grid.Row="2"
                  Margin="0 2 0 0"
                  GridLinesVisibility="None"
                  SelectionUnit="FullRow"
                  BorderThickness="0"
                  AutoGenerateColumns="False"
                  SelectionMode="Single"
                  RowHeaderWidth="0"
                  IsReadOnly="True"
                  Background="{DynamicResource Secondary}"
                  SelectedItem="{Binding SelectedProcess}"
                  ItemsSource="{Binding Processes}">
    
            <DataGrid.Columns>
                <DataGridTextColumn CellStyle="{StaticResource ImageCellStyle}"
                                    Header="Name"
                                    Width="140"
                                    Binding="{Binding Name}" />
    
                <DataGridTextColumn Header="PID"
                                    Width="50"
                                    Binding="{Binding Id}" />
    
                <DataGridTextColumn Header="Status"
                                    Width="*"
                                    Binding="{Binding Status}" />
    
                <DataGridTextColumn Header="User name"
                                    Width="*"
                                    Binding="{Binding UserName}" />

    
                <DataGridTextColumn Header="CPU"
                                    Width="*"
                                    Binding="{Binding Cpu}" />
    
                <DataGridTextColumn Header="Memory"
                                    Width="80"
                                    Binding="{Binding Memory, Converter={StaticResource MemoryFormatter}}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Setter Property="HorizontalAlignment" Value="Right" />
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>

    
                <DataGridTextColumn Header="Architecture"
                                    Width="*"
                                    Binding="{Binding Architecture}" />
    
                <DataGridTextColumn Header="Description"
                                    Width="*"
                                    Binding="{Binding Description}" />
    
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="End task" />
                    <Separator Background="Chocolate" />
                    <MenuItem Header="Change priority" />
                    <Separator />
                    <MenuItem Header="Open file location" />
                    <MenuItem Header="Search" />
                    <MenuItem Header="Задать приоритет">
                        <MenuItem Header="Реального времени" IsCheckable="True" />
                        <MenuItem Header="Высокий" IsCheckable="True" />
                        <MenuItem Header="Выше среднего" IsCheckable="True" />
                        <MenuItem Header="Обычный" IsCheckable="True" IsChecked="True" />
                        <MenuItem Header="Ниже среднего" IsCheckable="True" />
                        <MenuItem Header="Низкий" IsCheckable="True" />
                    </MenuItem>
                    <MenuItem Header="Property" />
                </ContextMenu>
            </DataGrid.ContextMenu>
        </DataGrid>
    </Grid>
</UserControl>